# Generated by Django 5.2.5 on 2025-08-09 13:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Camp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('location', models.CharField(max_length=255)),
                ('theme', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('directorate', models.CharField(max_length=255)),
                ('nss_unit', models.IntegerField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('directorate', models.CharField(max_length=100)),
                ('domain', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CampEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=60)),
                ('des', models.TextField()),
                ('date', models.DateField()),
                ('camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.camp')),
            ],
        ),
        migrations.CreateModel(
            name='CampEventPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='camp_event_photos/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.campevent')),
            ],
        ),
        migrations.AddField(
            model_name='camp',
            name='college',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.college'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.college')),
            ],
            options={
                'unique_together': {('name', 'college')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('is_campus_event', models.BooleanField(default=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.college')),
            ],
        ),
        migrations.CreateModel(
            name='EventDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('des', models.TextField()),
                ('expense', models.TextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='event_photos/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.event')),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration_years', models.IntegerField()),
                ('grad_level', models.CharField(choices=[('UG', 'Undergraduate'), ('PG', 'Postgraduate'), ('PhD', 'Doctorate'), ('Diploma', 'Diploma')], max_length=10)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.department')),
            ],
            options={
                'unique_together': {('name', 'department')},
            },
        ),
        migrations.AddField(
            model_name='college',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.university'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('university', 'University'), ('college', 'College'), ('po', 'Program Officer'), ('vs', 'Volunteer Secretary')], default='college', max_length=20)),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nss.college')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nss.university')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nss.user'),
        ),
        migrations.AddField(
            model_name='camp',
            name='coordinator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nss.user'),
        ),
        migrations.CreateModel(
            name='AttendanceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('unit', models.IntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=30)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.college')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.event')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendances', to='nss.user')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_attendances', to='nss.user')),
            ],
            options={
                'unique_together': {('date', 'unit', 'college', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('status', models.CharField(default='active', max_length=20)),
                ('guard_name', models.CharField(max_length=25)),
                ('guard_mob_no', models.BigIntegerField()),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=15)),
                ('dob', models.DateField()),
                ('year', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')])),
                ('community', models.CharField(choices=[('ST', 'ST'), ('SC', 'SC'), ('General', 'General'), ('OBC', 'OBC')], max_length=15)),
                ('address', models.TextField()),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=15)),
                ('height', models.IntegerField()),
                ('unit', models.IntegerField(choices=[(4, '4'), (5, '5'), (96, '96')])),
                ('weight', models.IntegerField()),
                ('mobile_no', models.BigIntegerField()),
                ('Email_id', models.EmailField(max_length=254)),
                ('year_of_enrollment', models.IntegerField()),
                ('cultural_talents', models.TextField()),
                ('hobbies', models.TextField()),
                ('roll_no', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='volunteer_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.college')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nss.user')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.programme')),
            ],
            options={
                'unique_together': {('roll_no', 'college')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together={('event_name', 'college', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='camp',
            unique_together={('name', 'college', 'from_date')},
        ),
        migrations.CreateModel(
            name='CampAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.camp')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.volunteer')),
            ],
            options={
                'unique_together': {('volunteer', 'camp')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('no_of_hours', models.IntegerField()),
                ('attendance_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.attendancestatus')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.event')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nss.volunteer')),
            ],
            options={
                'unique_together': {('volunteer', 'event', 'date')},
            },
        ),
    ]
